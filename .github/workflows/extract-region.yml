name: Region Extraction

on:
  push:
    branches: 
      - "main"
      - "ci/test-automation"

jobs:
  setup:
    name: Setup Agent-Region Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/bin/yq

      - id: set-matrix
        run: |
          AGENTS='["objectstorage", "server", "vpc", "redis", "ses", "nks", "nasvolume", "mysql", "mssql", "mongodb", "loadbalancer", "hadoop", "autoscaling"]'
          MATRIX="{\"include\":[]}"
          for agent in $(echo $AGENTS | jq -r '.[]'); do
            AGENT_KEY=$(echo "$agent" | tr '-' '_')
            REGIONS=$(yq eval ".regions.$AGENT_KEY[]" .github/data/region.yml | jq -R -s 'split("\n") | map(select(length > 0))')
            for region in $(echo $REGIONS | jq -r '.[]'); do
              MATRIX=$(echo $MATRIX | jq --arg agent "$agent" --arg region "$region" '.include += [{"agent": $agent, "region": $region}]')
            done
          done
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

      - name: Debug Output
        run: |
          echo "Matrix: ${{ steps.set-matrix.outputs.matrix }}"

  runner:
    name: Print Agent and Region Info
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - name: Print Agent and Region
        run: |
          echo "Agent: ${{ matrix.agent }}"
          echo "Region: ${{ matrix.region }}"
