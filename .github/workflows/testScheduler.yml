name: Test Scheduler

# on:
#     schedule:
#         - cron:  "0 0 * * *"

on:
    push:
        branches: 
            - "main"
            - "ci/test-automation"

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                go-version: ["1.21"]
                agent: ["obs_vpc_agent", "server_redis_agent"]  # 5개의 에이전트
                include:
                    - agent: "obs_vpc_agent"
                      tests: "objectstorage vpc"
                    - agent: "server_agent"
                      tests: "server"
                    - agent: "redis_agent"
                      tests: "redis"  
                    - agent: "autoscaling_agent"
                      tests: "autoscaling"
                    - agent: "cdss_agent"
                      tests: "cdss"
                    - agent: "hadoop_agen"
                      tests: "hadoop"  
                    - agent: "loadbalancer_agent"
                      tests: "loadbalancer"
                    - agent: "mongodb_agent"
                      tests: "mongodb"
                    - agent: "mssql_agent"
                      tests: "mssql"  
                    - agent: "loadbalancer_agent"
                      tests: "loadbalancer"
                    - agent: "mongodb_agent"
                      tests: "mongodb"
                    - agent: "mssql_agent"
                      tests: "mssql"  
                    - agent: "loadbalancer_agent"
                      tests: "loadbalancer"
                    - agent: "mongodb_agent"
                      tests: "mongodb"
                    - agent: "mssql_agent"
                      tests: "mssql"  
                    - agent: "nasvolume_agent"
                      tests: "nasvolume"
                    - agent: "nks_agent"
                      tests: "nks"  
                    - agent: "ses_agent"
                      tests: "ses" 
                      
        steps:
          - name: checkout branch
            uses: actions/checkout@v4
    
          - name: Set up Go
            uses: actions/setup-go@v5
            with:
              go-version: ${{ matrix.go-version }}
              cache: false

          - name: Install AWS CLI
            run: |
              sudo apt-get update
              sudo apt-get install -y awscli
    
          - name: Configure AWS CLI with NCP S3 compatible endpoint
            run: |
              aws configure set aws_access_key_id ${{ secrets.NCLOUD_ACCESS_KEY }}
              aws configure set aws_secret_access_key ${{ secrets.NCLOUD_SECRET_KEY }}
              aws configure set region kr-standard
              aws configure set s3.endpoint_url https://kr.object.ncloudstorage.com

          - name: Install ctrf cli tool
            run: |
                go install github.com/ctrf-io/go-ctrf-json-reporter/cmd/go-ctrf-json-reporter@latest
    
          - name: Run tests on agent ${{ matrix.agent }}
            run: |
                echo "Running tests on agent ${{ matrix.agent }}"
                for test in ${{ matrix.tests }}; do
                    export TF_ACC=1
                    export NCLOUD_REGION=${{ secrets.NCLOUD_REGION }}
                    export NCLOUD_ACCESS_KEY=${{ secrets.NCLOUD_ACCESS_KEY }}
                    export NCLOUD_SECRET_KEY=${{ secrets.NCLOUD_SECRET_KEY }}
                    echo $PWD
                    echo $ls
                    echo "$test"
                    go test -timeout 2h -v -json ./internal/service/"$test" | go-ctrf-json-reporter -output "$test"-report.json
                    cat "$test"-report.json

                    aws --endpoint-url=https://kr.object.ncloudstorage.com s3 cp "$test"-report.json s3://test-dashboard/data/"$test"-report.json
                done
