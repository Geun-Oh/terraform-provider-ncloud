name: Test Scheduler

# on:
#     schedule:
#         - cron:  "0 0 * * *"

on:
    push:
        branches: 
            - "main"
            # - "ci/test-automation"
env:
    PROVIDER_PATH: "./internal/service" 

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                go-version: ["1.21"]
                agent: ["obs_vpc_agent", "server_redis_agent"]  # 5개의 에이전트
                include:
                    - agent: "obs_vpc_agent"
                      tests: "./internal/service/objectstorage"  # 1번 에이전트가 순차적으로 실행할 테스트 리스트
                    - agent: "server_redis_agent"
                      tests: "./internal/service/server ./internal/service/redis"  # 2번 에이전트가 실행할 테스트
                    # - agent: 3
                    #   tests: "TestIndependentSuite3 TestIndependentSuite4"  # 3번 에이전트가 실행할 테스트
                    # - agent: 4
                    #   tests: "TestIndependentSuite5 TestIndependentSuite6"  # 4번 에이전트가 실행할 테스트
                    # - agent: 5
                    #   tests: "TestIndependentSuite7 TestIndependentSuite8"  # 5번 에이전트가 실행할 테스트

        steps:
          - name: checkout branch
            uses: actions/checkout@v4
    
          - name: Set up Go
            uses: actions/setup-go@v5
            with:
              go-version: ${{ matrix.go-version }}
              cache: false

          - name: Install ctrf cli tool
            run: |
                go install github.com/ctrf-io/go-ctrf-json-reporter/cmd/go-ctrf-json-reporter@latest
    
          - name: Run tests on agent ${{ matrix.agent }}
            run: |
                echo "Running tests on agent ${{ matrix.agent }}"
                for test in ${{ matrix.tests }}; do
                    export TF_ACC=1
                    export NCLOUD_REGION=${{ secrets.NCLOUD_REGION }}
                    export NCLOUD_ACCESS_KEY=${{ secrets.NCLOUD_ACCESS_KEY }}
                    export NCLOUD_SECRET_KEY=${{ secrets.NCLOUD_SECRET_KEY }}
                    echo $PWD
                    echo $ls
                    echo "$test"
                    go test -timeout 2h -v -json "$test" | go-ctrf-json-reporter -output ctrf-report.json
                    cat ctrf-report.json
                done
